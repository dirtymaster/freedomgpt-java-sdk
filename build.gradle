plugins {
    id 'org.openapi.generator' version '7.8.0'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
}

group = 'dirtymaster'
version = '0.3.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/dirtymaster/freedomgpt-java-sdk"
            credentials {
                username = project.findProperty("gpr.user")
                password = project.findProperty("gpr.key")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

dependencies {
//    implementation 'javax.annotation:javax.annotation-api:1.3.2'
//    implementation 'io.gsonfire:gson-fire:1.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.15.2'

//    compileOnly 'org.projectlombok:lombok:1.18.36'
//    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        kotlin {
            srcDir "${buildDir}/generated/src/main/kotlin"
        }
    }
}

openApiGenerate {
    generatorName = "kotlin"
    inputSpec = "$projectDir/src/main/resources/openapi.yml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "dirtymaster.fgpt.api"
    modelPackage = "dirtymaster.fgpt.model"
    configOptions = [
            disallowAdditionalPropertiesIfNotPresent: "false"
    ]
}

compileKotlin.dependsOn tasks.openApiGenerate

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        jvmTarget = "23"
        javaParameters = true
        freeCompilerArgs = ["-Xjvm-default=all"]
    }
}
